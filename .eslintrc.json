{
  "env": {
    "node": true,
    "es6": true,
    "jest": true
  },
  "overrides": [],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./",
    "sourceType": "module"
  },
  "root": true,
  "extends": [
    "airbnb-base",
    "plugin:@typescript-eslint/recommended"
  ],
  "plugins": [
    "import",
    "@typescript-eslint"
  ],
  "rules": {
    "arrow-body-style": "off",
    "class-methods-use-this": "off",
    "function-paren-newline": ["error", "consistent"],
    "import/extensions": "off",
    "import/no-extraneous-dependencies": "off",
    "import/order": [
      "error",
      {
        "groups": [
          ["builtin", "external"],
          "internal",
          ["sibling", "parent", "index"],
          ["type", "unknown"]
        ],
        "pathGroups": [
          {
            "pattern": "@nestjs/common",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@nestjs/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@nestia/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "express",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "src/prisma",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "src/config/**",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "src/{auth,lib,utils}/**",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "src/types",
            "group": "type",
            "position": "before"
          },
          {
            "pattern": "src/**",
            "group": "internal",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": [],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "distinctGroup": false,
        "newlines-between": "always"
      }
    ],
    "import/prefer-default-export": "off",
    "indent": "off",
    "lines-between-class-members": "off",
    "max-len": "off",
    "no-console": "off",
    "no-param-reassign": [
      "error",
      {
        "props": true
      }
    ],
    "no-shadow": "off",
    "no-underscore-dangle": "off",
    "no-use-before-define": "off",
    "no-useless-constructor": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "variable",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": "property",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      }
    ],
    "@typescript-eslint/no-shadow": [
      "warn",
      {
        "allow": [
          "error",
          "done",
          "resolve",
          "reject",
          "cb",
          "next",
          "res",
          "req",
          "err",
          "e",
          "data",
          "result",
          "results",
          "value",
          "values",
          "item",
          "items",
          "key",
          "keys",
          "val",
          "vals",
          "arg",
          "args",
          "param",
          "params",
          "err",
          "error",
          "cb",
          "callback",
          "done",
          "res",
          "response",
          "req",
          "request",
          "ctx",
          "context",
          "self",
          "this",
          "global",
          "window",
          "document",
          "console",
          "JSON",
          "Math",
          "Date",
          "setTimeout",
          "setInterval",
          "clearTimeout",
          "clearInterval",
          "Promise",
          "Map",
          "Set",
          "WeakMap",
          "WeakSet",
          "Symbol",
          "BigInt",
          "BigInt64Array",
          "BigUint64Array",
          "Array",
          "ArrayBuffer",
          "Boolean",
          "DataView",
          "Date",
          "Error",
          "EvalError",
          "Float32Array",
          "Float64Array",
          "Function",
          "Generator",
          "GeneratorFunction",
          "Infinity",
          "Int8Array",
          "Int16Array",
          "Int32Array",
          "Intl",
          "JSON",
          "Map",
          "Math",
          "NaN",
          "Number",
          "Object",
          "Promise",
          "Proxy",
          "RangeError",
          "ReferenceError",
          "Reflect",
          "RegExp",
          "Set",
          "String",
          "Symbol",
          "SyntaxError",
          "TypeError",
          "URIError",
          "Uint8Array",
          "Uint8ClampedArray",
          "Uint16Array",
          "Uint32Array",
          "WeakMap",
          "WeakSet",
          "WebAssembly",
          "decodeURI",
          "decodeURIComponent",
          "encodeURI",
          "encodeURIComponent",
          "escape",
          "eval",
          "isFinite",
          "isNaN",
          "parseFloat",
          "parseInt",
          "unescape",
          "undefined",
          "null",
          "true",
          "false",
          "onabort",
          "onblur",
          "oncancel",
          "oncanplay",
          "oncanplaythrough",
          "onchange",
          "onclick",
          "onclose",
          "oncontextmenu",
          "oncuechange",
          "ondblclick",
          "ondrag",
          "ondragend",
          "ondragenter",
          "ondragexit",
          "ondragleave",
          "ondragover",
          "ondragstart",
          "ondrop",
          "ondurationchange",
          "onemptied",
          "onended",
          "onerror",
          "onfocus",
          "oninput"
        ]
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "extensions": [".ts"]
      },
      "node": {
        "extensions": [".ts"]
      }
    }
  }
}